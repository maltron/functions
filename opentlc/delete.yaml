#!/usr/bin/env ansible-playbook
---
- name: "CloudForms API: Deleting OpenShift 4 AWS Install VM"
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files: 
        - configuration.yaml
        - credentials.yaml
  tasks:
     - name: "Parameter: username"
       fail: msg="username is not defined or is empty"
       when: username is not defined or username is none
       tags: [ always ]

     - name: "Parameter: password"
       fail: msg="password is not defined or is empty"
       when: password is not defined or password is none
       tags: [ always ]

     - name: "Logging In"
       uri: url={{ cloudforms_api_url }}/api/auth method=GET status_code=200 
            force_basic_auth=True
            user={{ username }} password={{ password }}
            headers={"Content-type":"application/json","Accept":"application/json"}
       register: authentication

     - name: "Authentication Token{{ ':' }} {{ authentication.json.auth_token }}"
       set_fact: authentication_token="{{ authentication.json.auth_token }}"

     - name: Retrieving Service URL
       uri: url={{ cloudforms_api_url }}/api/services method=GET status_code=200
            headers={"Content-type":"application/json","Accept":"application/json","X-Auth-Token":"{{ authentication_token }}"}
       register: list_services

     - name: "Check if there are any available services"
       fail: msg="There are no available services"
       when: list_services.json.subcount == 0

     - name: "Service Selected{{ ':' }} {{ list_services.json.resources[0].href }}"
       set_fact: service_selected="{{ list_services.json.resources[0].href }}"

     - name: "Fetching Custom Attributes{{ ':' }} {{ service_selected }}"
       uri: url={{ service_selected }}?attributes=custom_attributes method=GET status_code=200
            headers={"Content-type":"application/json","Accept":"application/json","X-Auth-Token":"{{ authentication_token }}"}
       register: custom_attributes       

     - name: Fetching SSH Access information (Environment Info 5)
       set_fact: ssh_host_target_host={{ custom_attributes|json_query("json.custom_attributes[?name=='Environment Info 5'].value")|first|regex_replace("^SSH Access[:] ssh ", "") }}
     
     - set_fact: target_host_user="{{ ssh_host_target_host | regex_replace("[@](.*)$", "") }}"
     - set_fact: target_host_name="{{ ssh_host_target_host | regex_replace("^(.*)[@]", "") }}"

     - name: Fetching Password for Host (Environment Info 6)
       set_fact: target_host_password={{ custom_attributes|json_query("json.custom_attributes[?name=='Environment Info 6'].value")|first|regex_replace("^SSH password[:] ", "") }}

     - name: Fetching GUID
       set_fact: guid={{ custom_attributes|json_query("json.custom_attributes[?name=='GUID'].value")|first }}

     - name: Setting Up Bastion to easy access
       add_host: groups=openshift_bastion hostname={{ target_host_name }}
                 ansible_user={{ target_host_user }} ansible_password={{ target_host_password }}
                 guid={{ guid }}

- name: Setting Up Bastion 
  hosts: openshift_bastion
  gather_facts: false
  become: True
  vars_files:
        - configuration.yaml
        - credentials.yaml
  tasks:
    - name: "Uninstalling OpenShift"
      command: openshift-install destroy cluster --dir /root/cluster-{{ guid }} --log-level=debug
      ignore_errors: True
      tags: [ openshift_install ]
      
- name: "CloudForms API: Deleting OpenShift 4 AWS Install VM"
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files: 
        - configuration.yaml
        - credentials.yaml
  tasks:
     - name: "Deleting {{ list_services.json.subcount }} Services"
       uri: url={{ item.href }} method=POST status_code=200
            headers={"Content-type":"application/json","Accept":"application/json","X-Auth-Token":"{{ authentication_token }}"}
            body_format=json
            body='{"app_status":"Status","warning":"Please do not start or stop an environment that you just provisioned.  It will only take longer if you do so.  It is not necessary to use start upon initial provision.  The environment is automatically started upon provisioning.  You will not get your lab quicker if you do this and it may fail to deploy correctly.","areyousure":"yes","action":"Delete"}'
       with_items: "{{ list_services.json.resources }}"
