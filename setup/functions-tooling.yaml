#!/usr/bin/env ansible-playbook
---
- name: Setup Functions Tooling
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
     client_directory: /root/k8s/client
     odo_client_version: "latest"
     odo_client: { url: "https://mirror.openshift.com/pub/openshift-v4/clients/odo/{{ odo_client_version }}/odo-linux-amd64", filename: "odo" }
     istio_client_version: "1.4.5"
     istio_client: { url: "https://github.com/istio/istio/releases/download/{{ istio_client_version }}/istioctl-{{ istio_client_version }}-linux.tar.gz", filename: "istioctl.tar.gz" }
     knative_client_version: "v0.11.0"
     knative_client: { url: "https://github.com/knative/client/releases/download/{{ knative_client_version }}/kn-linux-amd64", filename: "kn"}
     appsody_client_version: "0.5.8"
     appsody_client: { url: "https://github.com/appsody/appsody/releases/download/{{ appsody_client_version }}/appsody-{{ appsody_client_version }}-1.x86_64.rpm", filename: "appsody.rpm"}
     azure_functions_client_version: "2.7.2100"
     azure_functions_client: { url: "https://github.com/Azure/azure-functions-core-tools/releases/download/{{ azure_functions_client_version }}/Azure.Functions.Cli.linux-x64.{{ azure_functions_client_version }}.zip", filename: "azure_functions.zip"}
     go_language_version: "1.13.7"
     go_language: { url: "https://dl.google.com/go/go{{ go_language_version }}.linux-amd64.tar.gz", filename: "golang.tar.gz"}
     go_workspace: "/root/go_workspace"
     exercism_version: "3.0.13"
     exercism: { url: "https://github.com/exercism/cli/releases/download/v{{ exercism_version }}/exercism-{{ exercism_version }}-linux-x86_64.tar.gz", filename: "exercism.tar.gz", folder: "/root/learn/exercism" }
     java_8_version: "8u241"
     java_8_uniqueid: "1f5b5a70bf22433b84d0e960903adac8"
     java_8: { url: "http://download.oracle.com/otn-pub/java/jdk/{{ java_8_version }}-b07/{{ java_8_uniqueid }}/jdk-{{ java_8_version }}-linux-x64.tar.gz", filename: "jdk-8-linux-x64.tar.gz" }
     maven_version: "3.6.3"
     maven: { url: "https://downloads.apache.org/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz", filename: "apache-maven.tar.gz" }
  tasks:
     - name: "Installing Python PIP"
       yum: name=python-pip state=latest
       tags: [ python ]

     - name: "Library for Python: docker-py"
       command: pip install docker-py 
       tags: [ python ]

     - name: "Docker CE: Adding Repository"
       get_url: url=https://download.docker.com/linux/centos/docker-ce.repo
                dest=/etc/yum.repos.d
       tags: [ docker ]

     - name: Removing Original Docker
       yum: name=[docker,docker-ce,docker-common,docker-client] state=absent
       tags: [ docker ]

     - name: Installing Docker CE
       yum: name=docker-ce state=present
       tags: [ docker ]

     - name: Starting Docker CE Service
       service: name=docker state=started enabled=yes
       tags: [ docker ]

     - name: "If docker credentials are provided, docker login: docker_registry, docker_username, docker_password"
       docker_login: registry={{ docker_registry }} username={{ docker_username }} password={{ docker_password }}
       when: docker_registry is defined and docker_registry is not none and docker_username is defined and docker_username is not none and docker_password is defined and docker_password is not none
       tags: [ docker ]

     - name: Removing Original Git
       yum: name=git state=absent
       tags: [ git ]

     - name: Installing Git 2 
       yum: name=https://centos7.iuscommunity.org/ius-release.rpm state=present
       tags: [ git ]

     - name: Installing Git 2 All
       yum: name=git2u-all state=present
       tags: [ git ]

     - name: "Downloading Clients: Knative, Appsody, Azure Functions, ODO, Go Language"
       get_url: url={{ item.url }} dest=./{{ item.filename }}
       with_items:
          - "{{ maven }}"
          - "{{ istio_client }}"
          - "{{ knative_client }}"
          - "{{ appsody_client }}"
          - "{{ azure_functions_client }}"
          - "{{ odo_client }}"
          - "{{ go_language }}"
          - "{{ exercism }}"
       tags: [ odo, istio, knative, appsody, azure_functions, go_language, exercism, maven ]

     - name: "ODO: Move to /usr/local/bin"
       copy: src=./{{ odo_client.filename }} dest=/usr/local/bin mode=755
       tags: [ odo ]

     - name: "Knative: Move Knative Client to /usr/local/bin"
       copy: src=./{{ knative_client.filename }} dest=/usr/local/bin mode=755       
       tags: [ knative ]

     - name: "Appsody: Installing Appsody Client"
       yum: name=./{{ appsody_client.filename }} state=present
       tags: [ appsody ]

     - name: "Istio: Creating directory {{ client_directory }}/istio"
       file: path={{ client_directory }}/istio state=directory
       tags: [ istio ]

     - name: "Istio: Unarchiving Istio into {{ client_directory }}/istio"
       unarchive: src={{ istio_client.filename }} dest={{ client_directory }}/istio
       tags: [ istio ]

     - name: "Azure Functions: Creating directory {{ client_directory }}/azure_functions"
       file: path={{ client_directory }}/azure_functions state=directory
       tags: [ azure_functions ]

     - name: "Azure Functions: Unarchiving Azure Functions into {{ client_directory }}/azure_functions"
       unarchive: src={{ azure_functions_client.filename }} dest={{ client_directory }}/azure_functions
       tags: [ azure_functions ]

     - name: "Azure Functions: Make func executable"
       file: name={{ client_directory }}/azure_functions/func mode=655
       tags: [ azure_functions ]

     - name: "Unarchiving Go Language into /usr/bin"
       unarchive: src={{ go_language.filename }} dest=/usr/bin
       tags: [ go_language ]

     - name: "Creating a Go workspace for all Go projects: {{ go_workspace }}"
       file: path={{ go_workspace }} state=directory

     - name: "Exercism: Creating a Directory: {{ exercism.folder }}"
       file: path={{ exercism.folder }} state=directory
       tags: [ exercism ]

     - name: "Exercism: Unarchiving Exercism into {{ exercism.folder }}"
       unarchive: src={{ exercism.filename }} dest={{ exercism.folder }}
       tags: [ exercism ]

     - name: "Java 8: Creating Directory"
       file: path={{ client_directory }}/java state=directory
       tags: [ java ]

     - name: "Java 8: Download Oracle Java 8 ({{ java_8_version }})"
       uri: url={{ java_8.url }} 
            headers={"Cookie":"oraclelicense=accept-securebackup-cookie"} validate_certs=False
            dest={{ client_directory }}/java/{{ java_8.filename }}
       tags: [ java ]

     - name: "Java 8: Unarchive Oracle Java 8"
       unarchive: src={{ client_directory }}/java/{{ java_8.filename }} dest={{ client_directory }}/java
       tags: [ java ]

     - name: "Java 8: Looking for the first directory name"
       find: path={{ client_directory }}/java file_type=directory
       register: java_directory
       tags: [ java ]

     - name: "Java 8: Moving for Directory 8"
       command: mv {{ java_directory.files[0].path }} {{ client_directory }}/java/8
       tags: [ java ]

    #  - name: "Java 8: Delete original Directory"
    #    file: path={{ java_directory.files[0].path }} state=absent
    #    tags: [ java ]

     - name: "Maven: Creating directory {{ client_directory }}/apache/maven"
       file: path={{ client_directory }}/istio state=directory
       tags: [ maven ]

     - name: "Maven: Unarchiving Maven into {{ client_directory }}/apache/maven"
       unarchive: src={{ maven.filename }} dest={{ client_directory }}/apache/maven
                  extra_opts="[--strip-components=1]"
       tags: [ maven ]

     - name: "Creating a environment variables on /root/.bashrc"
       lineinfile: path=/root/.bashrc insertafter=EOF line="export {{ item }}"
       with_items: 
           - "GOPATH={{ go_workspace }}"
           - "GOROOT=/usr/bin/go"
           - "JAVA_HOME={{ client_directory }}/java/8"
           - "MVN_HOME={{ client_directory }}/apache/maven"
           - "PATH=${PATH}:{{ client_directory }}/azure_functions:${GOROOT}/bin:${GOPATH}:{{ exercism.folder }}:{{ client_directory }}/istio/bin:{{ client_directory }}/java/8/bin:{{ client_directory }}/apache/maven/bin"
       tags: [ azure_functions, exercism, istio, java ]

     - name: Cleaning Up
       file: path=./{{ item }} state=absent
       with_items: 
          - "{{ client_directory }}/java/8/{{ java_8.filename }}"
          - "{{ istio_client.filename }}"
          - "{{ knative_client.filename }}"
          - "{{ appsody_client.filename }}"
          - "{{ azure_functions_client.filename }}"
          - "{{ odo_client.filename }}"
          - "{{ go_language.filename }}"
          - "{{ exercism.filename }}"
       tags: [ odo, istio, knative, appsody, azure_functions, go_language, exercism, java ]
