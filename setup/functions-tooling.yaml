#!/usr/bin/env ansible-playbook
---
- name: Setup Functions Tooling
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
     client_directory: /root/k8s/client
     odo_client_version: "latest"
     odo_client: { url: "https://mirror.openshift.com/pub/openshift-v4/clients/odo/{{ odo_client_version }}/odo-linux-amd64", filename: "odo" }
     knative_client_version: "v0.11.0"
     knative_client: { url: "https://github.com/knative/client/releases/download/{{ knative_client_version }}/kn-linux-amd64", filename: "kn"}
     appsody_client_version: "0.5.6"
     appsody_client: { url: "https://github.com/appsody/appsody/releases/download/{{ appsody_client_version }}/appsody-{{ appsody_client_version }}-1.x86_64.rpm", filename: "appsody.rpm"}
     azure_functions_client_version: "2.7.2100"
     azure_functions_client: { url: "https://github.com/Azure/azure-functions-core-tools/releases/download/{{ azure_functions_client_version }}/Azure.Functions.Cli.linux-x64.{{ azure_functions_client_version }}.zip", filename: "azure_functions.zip"}
     go_language_version: "1.13.7"
     go_language: { url: "https://dl.google.com/go/go{{ go_language_version }}.linux-amd64.tar.gz", filename: "golang.tar.gz"}
     go_workspace: "/root/go_workspace"
     exercism_version: "3.0.13"
     exercism: { url: "https://github.com/exercism/cli/releases/download/v{{ exercism_version }}/exercism-{{ exercism_version }}-linux-x86_64.tar.gz", filename: "exercism.tar.gz", folder: "/root/learn/exercism" }
  tasks:
     - name: "Installing Python PIP"
       yum: name=python-pip state=latest
       
     - name: "Library for Python: docker-py"
       command: pip install docker-py 

     - name: "Docker CE: Adding Repository"
       get_url: url=https://download.docker.com/linux/centos/docker-ce.repo
                dest=/etc/yum.repos.d

     - name: Removing Original Docker
       yum: name=[docker,docker-ce,docker-common,docker-client] state=absent

     - name: Installing Docker CE
       yum: name=docker-ce state=present

     - name: Starting Docker CE Service
       service: name=docker state=started enabled=yes

     - name: "If docker credentials are provided, docker login: docker_registry, docker_username, docker_password"
       docker_login: registry={{ docker_registry }} username={{ docker_username }} password={{ docker_password }}
       when: docker_registry is defined and docker_registry is not none and docker_username is defined and docker_username is not none and docker_password is defined and docker_password is not none

     - name: Removing Original Git
       yum: name=git state=absent

     - name: Installing Git 2 
       yum: name=https://centos7.iuscommunity.org/ius-release.rpm state=present

     - name: Installing Git 2 All
       yum: name=git2u-all state=present

     - name: "Downloading Clients: Knative, Appsody, Azure Functions, ODO, Go Language"
       get_url: url={{ item.url }} dest=./{{ item.filename }}
       with_items:
          - "{{ knative_client }}"
          - "{{ appsody_client }}"
          - "{{ azure_functions_client }}"
          - "{{ odo_client }}"
          - "{{ go_language }}"
          - "{{ exercism }}"
       tags: [ always ]

     - name: "ODO: Move to /usr/local/bin"
       copy: src=./{{ odo_client.filename }} dest=/usr/local/bin mode=755
       tags: [ odo ]

     - name: "Knative: Move Knative Client to /usr/local/bin"
       copy: src=./{{ knative_client.filename }} dest=/usr/local/bin mode=755       
       tags: [ knative ]

     - name: "Appsody: Installing Appsody Client"
       yum: name=./{{ appsody_client.filename }} state=present
       tags: [ appsody ]

     - name: "Azure Functions: Creating directory {{ client_directory }}/azure_functions"
       file: path={{ client_directory }}/azure_functions state=directory
       tags: [ azure_functions ]

     - name: "Azure Functions: Unarchiving Azure Functions into {{ client_directory }}/azure_functions"
       unarchive: src={{ azure_functions_client.filename }} dest={{ client_directory }}/azure_functions
       tags: [ azure_functions ]

     - name: "Azure Functions: Make func executable"
       file: name={{ client_directory }}/azure_functions/func mode=655
       tags: [ azure_functions ]

     - name: "Unarchiving Go Language into /usr/bin"
       unarchive: src={{ go_language.filename }} dest=/usr/bin
       tags: [ go_language ]

     - name: "Creating a Go workspace for all Go projects: {{ go_workspace }}"
       file: path={{ go_workspace }} state=directory

     - name: "Exercism: Creating a Directory: {{ exercism.folder }}"
       file: path={{ exercism.folder }} state=directory
       tags: [ exercism ]

     - name: "Exercism: Unarchiving Exercism into {{ exercism.folder }}"
       unarchive: src={{ exercism.filename }} dest={{ exercism.folder }}
       tags: [ exercism ]

     - name: "Creating a environment variables on /root/.bashrc"
       lineinfile: path=/root/.bashrc insertafter=EOF line="export {{ item }}"
       with_items: 
           - "GOPATH={{ go_workspace }}"
           - "GOROOT=/usr/bin/go"
           - "PATH=${PATH}:{{ client_directory }}/azure_functions:${GOROOT}/bin:${GOPATH}:{{ exercism.folder }}"
       tags: [ azure_functions, exercism ]

     - name: Cleaning Up
       file: path=./{{ item }} state=absent
       with_items: 
          - "{{ knative_client.filename }}"
          - "{{ appsody_client.filename }}"
          - "{{ azure_functions_client.filename }}"
          - "{{ odo_client.filename }}"
          - "{{ go_language.filename }}"
          - "{{ exercism.filename }}"
       tags: [ always ]
