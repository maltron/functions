- name: "{{ application }} >> Creating directory: {{ directory }}"
  file: path={{ directory }} state=directory 

- name: "{{ application }} >> Defining filename: {{ directory }}/{{ application }}.{{ extension }}"
  set_fact: filename="{{ directory }}/{{ application }}.{{ extension }}"
  when: extension|length > 0
  tags: [ untar ]

- name: "{{ application }} >> Defining filename: {{ directory }}/{{ application_name }}"
  set_fact: filename="{{ directory }}/{{ application_name }}"
  when: extension|length == 0 and application is defined and application_name is not none

- name: "{{ application }} >> Deleting any previously file downloaded: {{ filename }}"
  file: path={{ filename }} state=absent

- name: "{{ application }} >> Deleting any previously directories: {{ directory }}/{{ application }}"
  file: path={{ directory }}/{{ application }} state=absent

- name: "{{ application }} >> Downloading: {{ url }}"
  uri: url={{ url }} dest={{ filename }} headers={{ headers }} validate_certs=False

- name: "{{ application }} >> Making executable"
  file: path={{ filename }} mode="a+x"
  when: extension|length == 0 and application_name is defined and application is not none

- name: "{{ application }} >> Unarchiving {{ filename }} into {{ directory }}"
  unarchive: src={{ filename }} dest={{ directory }} list_files=True
  when: extension is defined and extension is not none and extension|length > 0
  register: unarchive_output
  tags: [ untar ]

- name: "{{ application }} >> Moving directory name into {{ application }}"
  command: mv {{ directory }}/{{ unarchive_output.files[0].split('/')[0] }} {{ directory }}/{{ application }}
  when: unarchive_output is defined and extension|length > 0 and application_name is not defined

- name: "{{ application }} >> Deleting file: {{ filename }}"
  file: path={{ filename }} state=absent
  when: extension|length > 0

- name: "{{ application }} >> Adding an Environment variable: {{ env_variable }}"
  lineinfile: path={{ ansible_env.HOME }}/.bashrc insertafter=EOF line="export {{ env_variable }}"
  when: env_variable is defined and env_variable is not none

- name: "{{ application }} >> Adding executable into the PATH: {{ executable_directory }}"
  lineinfile: path={{ ansible_env.HOME }}/.bashrc insertafter=EOF line="export PATH=${PATH}:{{ executable_directory }}"
  when: executable_directory is defined and executable_directory is not none
  

